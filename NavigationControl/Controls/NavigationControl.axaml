<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
        xmlns:c="clr-namespace:NavigationControl.Controls;assembly=NavigationControl">
    <Styles.Resources>
        <SolidColorBrush x:Key="DialogBackground" Color="#FFFFFF" />
        <SolidColorBrush x:Key="DialogOverlayColor" Color="#7F7A7A7A" />
        <BoxShadows x:Key="DialogBoxShadow">4 11 30 1 #3F000000</BoxShadows>
        <SolidColorBrush x:Key="PopupBackground" Color="#FFFFFF" />
        <SolidColorBrush x:Key="PopupOverlayColor" Color="#7F7A7A7A" />
        <BoxShadows x:Key="PopupBoxShadow">4 11 30 1 #3F000000</BoxShadows>
        <x:Double x:Key="DialogMaxWidth">500</x:Double>
        <x:Double x:Key="DialogMinWidth">400</x:Double>
        <CornerRadius x:Key="DialogCornerRadius">4</CornerRadius>
        <CornerRadius x:Key="PopupCornerRadius">4</CornerRadius>
    </Styles.Resources>
    <Style Selector="c|NavigationControl">
        <Setter Property="Template">
            <ControlTemplate>
                <Panel x:Name="PART_MainPanel">
                    <DockPanel x:Name="PART_MainDockPanel" IsEnabled="{TemplateBinding IsContentEnabled}">
                        <Panel x:Name="PART_LeftPanePanel" DockPanel.Dock="Left" IsVisible="{TemplateBinding LeftPane, Converter={x:Static ObjectConverters.IsNotNull}}">
                            <ContentControl Content="{TemplateBinding LeftPane}"/>
                        </Panel>
                        <Panel x:Name="PART_RightPanePanel" DockPanel.Dock="Right" IsVisible="{TemplateBinding RightPane, Converter={x:Static ObjectConverters.IsNotNull}}">
                            <ContentControl Content="{TemplateBinding RightPane}"/>
                        </Panel>
                        <Panel x:Name="PART_StatusPanel" DockPanel.Dock="Bottom" IsVisible="{TemplateBinding Status, Converter={x:Static ObjectConverters.IsNotNull}}">
                            <ContentControl Content="{TemplateBinding Status}"/>
                        </Panel>
                        <Panel x:Name="PART_ContentPanel" IsVisible="{TemplateBinding Content, Converter={x:Static ObjectConverters.IsNotNull}}">
                            <ContentControl Content="{TemplateBinding Content}"/>
                        </Panel>
                    </DockPanel>
                    <Panel x:Name="PART_DialogPanel" IsEnabled="{TemplateBinding IsDialogEnabled}" IsVisible="{TemplateBinding Dialog, Converter={x:Static ObjectConverters.IsNotNull}}">
                        <Panel x:Name="PART_OverlayDialogPanel" Background="{DynamicResource PopupOverlayColor}">
                            <i:Interaction.Behaviors>
                                <ia:EventTriggerBehavior EventName="PointerPressed">
                                    <ia:InvokeCommandAction Command="{Binding CloseDialogCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding Dialog, RelativeSource={RelativeSource TemplatedParent}}" />
                                </ia:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Panel>
                        <Panel x:Name="PART_DialogContentPanel" MaxWidth="{DynamicResource DialogMaxWidth}" MaxHeight="{DynamicResource DialogMinWidth}">
                            <Border x:Name="PART_DialogContentBorder"
                                    Background="{DynamicResource DialogBackground}"
                                    BoxShadow="{DynamicResource DialogBoxShadow}"
                                    CornerRadius="{DynamicResource DialogCornerRadius}"/>
                            <ContentControl Content="{TemplateBinding Dialog}"/>
                        </Panel>
                    </Panel>
                    <Panel x:Name="PART_PopupPanel" IsVisible="{TemplateBinding Popup, Converter={x:Static ObjectConverters.IsNotNull}}">
                        <Panel x:Name="PART_OverlayPopupPanel" Background="{DynamicResource PopupOverlayColor}">
                            <i:Interaction.Behaviors>
                                <ia:EventTriggerBehavior EventName="PointerPressed">
                                    <ia:InvokeCommandAction Command="{Binding ClosePopupCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding Popup, RelativeSource={RelativeSource TemplatedParent}}" />
                                </ia:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Panel>
                        <Panel x:Name="PART_PopupContentPanel" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Border x:Name="PART_PopupContentBorder"
                                    Background="{DynamicResource PopupBackground}"
                                    BoxShadow="{DynamicResource PopupBoxShadow}"
                                    CornerRadius="{DynamicResource PopupCornerRadius}"/>
                            <ContentControl Content="{TemplateBinding Popup}"/>
                        </Panel>
                    </Panel>
                </Panel>
            </ControlTemplate>
        </Setter>
    </Style>
</Styles>
